import Layout from '@components/Layout'
import ListItem from '@components/ListItem'
import Sidebar from '@components/Sidebar'
import Spinner from '@components/Spinner'
import Head from 'next/head'
import React from 'react'
import { useQuery } from 'react-query'
import { useRecoilValue } from 'recoil'
import useAuthState from 'src/hooks/useAuthState'
import { findDeclarations } from 'src/lib/declarations'
import { sidebarState } from 'src/state/sidebarState'

interface DeclarationsProps {}

const Declarations = ({}: DeclarationsProps) => {
  const [user] = useAuthState()
  const userId = user?.uid

  const { isLoading, data } = useQuery(
    ['findDeclarations', userId],
    () => findDeclarations(userId!),
    {
      enabled: !!userId,
    }
  )

  return (
    <Layout>
      <Head>
        <title>천국열쇠 챌린지</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="relative w-full overflow-y-auto py-8 px-4 flex flex-col gap-y-4">
        {isLoading ? (
          <Spinner />
        ) : (
          data?.map((item, index) => <ListItem key={index} item={item} />)
        )}
      </div>
    </Layout>
  )
}

export default Declarations
